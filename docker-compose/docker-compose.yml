version: '3'
services:
  zookeeper:
    image: "docker.io/bitnami/zookeeper:3"
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - my_network

  kafka:
    image: "docker.io/bitnami/kafka:2-debian-10"
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9093,OUTSIDE://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - my_network

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "9090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181
    networks:
      - my_network

  common-ms:
    build:
      context: ../common-ms
    image: common-ms
    container_name: common-ms
    ports:
      - "8080:8080"
    depends_on:
      - common_db
    environment:
      SPRING_APPLICATION_NAME: "common-service"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://common_db:5432/flight"
    extends:
      file: common-config.yml
      service: microservice-base-config

  common_db:
    image: postgres:latest
    environment:
      POSTGRES_DB: flight
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    networks:
      - my_network

  airplane-ms:
    build:
      context: ../airplane-ms
    image: airplane-ms
    container_name: airplane-ms
    restart: always
    ports:
      - "8083:8083"
    depends_on:
      - plane_db
    environment:
      SPRING_APPLICATION_NAME: "airplane-service"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://plane_db:5432/plane"
    extends:
      file: common-config.yml
      service: microservice-base-config

  plane_db:
    image: postgres:latest
    environment:
      POSTGRES_DB: plane
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5433:5432"
    networks:
      - my_network

  booking-ms:
    build:
      context: ../booking-ms
    image: booking-ms
    container_name: booking-ms
    restart: always
    ports:
      - "8086:8086"
    depends_on:
      - booking_db
    environment:
      SPRING_APPLICATION_NAME: "booking-service"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://booking_db:5432/ticket"
    extends:
      file: common-config.yml
      service: microservice-base-config

  booking_db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ticket
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5434:5432"
    depends_on:
      - kafka
    networks:
      - my_network

  notification-ms:
    build:
      context: ../notification-ms
    image: notification-ms
    container_name: notification-ms
    restart: always
    ports:
      - "8082:8082"
    depends_on:
      - kafka
    extends:
      file: common-config.yml
      service: microservice-base-config

  user-ms:
    build:
      context: ../user-ms
    image: user-ms
    container_name: user-ms
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - user_db
    environment:
      SPRING_APPLICATION_NAME: "user-service"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://user_db:5432/user"
    extends:
      file: common-config.yml
      service: microservice-base-config

  user_db:
    image: postgres:latest
    environment:
      POSTGRES_DB: user
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5435:5432"
    depends_on:
      - kafka
    networks:
      - my_network

  flight-ms:
    build:
      context: ../flight-ms
    image: flight-ms
    container_name: flight-ms
    restart: always
    ports:
      - "8085:8085"
    depends_on:
      - flight_db
    environment:
      SPRING_APPLICATION_NAME: "flight-service"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://flight_db:5432/flight"
    extends:
      file: common-config.yml
      service: microservice-base-config

  flight_db:
    image: postgres:latest
    environment:
      POSTGRES_DB: flight
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5436:5432"
    depends_on:
      - booking-ms
    networks:
      - my_network

networks:
  my_network:
    driver: "bridge"
